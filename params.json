{"name":"Phenol2 Controller","tagline":"","body":"### Фреймворк Phenol2\r\nЭто очень простой, легкий и в тоже время мощный фреймворк для сайтов и веб приложений написанных на PHP.<br/>\r\nPhenol2 находится в постоянном развитии.\r\n\r\n\r\nЗапуск движка с последующим запуском приложений:\r\n```\r\n<?php\r\nrequire '../Phenol2/engine.php';\r\n\r\n$phenol->detector->searchPackagesIn(dirname(__FILE__).DS.'%package%'.DS);\r\n$phenol->detector->default_package = \"default\";\r\n\r\n$subdomain = $phenol->detector->getCurrentSubdomain();\r\nif ( $subdomain ) {\r\n\t$phenol->detector->setPackage($phenol->detector->detectAlias($subdomain));\r\n}\r\nelse\r\n{\r\n\t$phenol->detector->setPackage(\"default\");\r\n}\r\n\r\nif ( $phenol->detector->isFileRequested() ) {\r\n\t$phenol->detector->getFileRequested();\r\n\tdie();\r\n}\r\n$phenol->detector->runPackage();\r\n```\r\n\r\n### Структура приложения\r\nКод приложения помещается в отдельную вложенную папку в корне сайта.<br/>\r\nВ пределах одного сайта можно запускать несколько приложений, приложения называются пакетами.<br/>\r\nКаждый пакет содержит два обязательных файла:\r\n* package.php\r\n* config.php\r\n\r\n#### Package.php\r\nФайл содержит в себе класс описывающий пакет, с единственной функцией `onRun` для инициализации кода приложения\r\n```\r\nclass PackageDefault extends \\System\\Package\r\n{\r\n\tpublic function onRun( $args )\r\n\t{\r\n\t\t$this->cache->Enable(DIR_PACKAGE);\r\n\t\t$this->db->init();\r\n\t\t$this->fconfig->i['user_language'] = $this->detector->LanguageMatchBest(array(\r\n\t\t\t'ru' => array('ru', 'be', 'uk', 'ky', 'ab', 'mo', 'et', 'lv'),\r\n\t\t), $this->fconfig->i['default_language']);\r\n\t\t$this->locale->folder = DIR_PACKAGE . 'language' . DS;\r\n\t\t$this->locale->setLanguage($this->fconfig->i['user_language']);\r\n\t\t$this->locale->add('common');\r\n\t\t$this->view->folder = DIR_PACKAGE . 'view' . DS;\r\n\t\t$this->detector->runControllerScheme( $args );\r\n\t}\r\n}\r\n```\r\n\r\nИмя класса формируется из двух частей, первое слово `Package` второе это имя папки в которой находится файл package.php с большой буквы например `Default`. Результатом будет класс с именем `PackageDefault`.\r\n\r\n#### Config.php\r\nФайл настроек базы данных для выбранного пакета\r\n```\r\n<?php\r\n$config = array\r\n(\r\n\t'db_host' => 'localhost',\r\n\t'db_base' => 'phenol2',\r\n\t'db_user' => 'root',\r\n\t'db_pass' => '',\r\n\t'db_encode' => 'utf-8'\r\n);\r\n```\r\n\r\n#### Структура папок\r\nВ каждом приложении сохраняется общая структура папок для большей ясности.\r\n* cache\r\n* controller\r\n* i18n\r\n* model\r\n* resource\r\n* view\r\n\r\n``cache`` - папка сохранения кэше запросов к базе данных.<br/>\r\n``controller`` - здесь располагаются все контроллеры пакета<br/>\r\n``i18n`` - директория с файлами перевода<br/>\r\n``model`` - модели базы данных<br/>\r\n``resource`` - корень пакета доступного извне<br/>\r\n``view`` - папка с шаблонами<br/>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}